<main class="container my-4">
  <h2>Checkout</h2>

  <!-- Order Form -->
  <%= form_with model: @order, url: complete_checkout_cart_path, local: true, id: 'order-form' do |f| %>
    <div class="form-group">
      <%= f.label :address_street, 'Street Address' %>
      <%= f.text_field :address_street, class: 'form-control', value: current_user.address_street, required: true %>
    </div>

    <div class="form-group">
      <%= f.label :address_city, 'City' %>
      <%= f.text_field :address_city, class: 'form-control', value: current_user.address_city, required: true %>
    </div>

    <div class="form-group">
      <%= f.label :address_zip_code, 'Zip Code' %>
      <%= f.text_field :address_zip_code, class: 'form-control', value: current_user.address_zip_code, required: true %>
    </div>

    <div class="form-group">
      <%= f.label :province, 'Province' %>
      <%= f.select :province, options_for_select(provinces_list), { include_blank: 'Select Province' }, class: 'form-control', required: true %>
    </div>

    <h3>Items in Your Cart</h3>
    <table class="table">
      <thead>
        <tr>
          <th>Product</th>
          <th>Quantity</th>
          <th>Price</th>
          <th>Total</th>
        </tr>
      </thead>
      <tbody>
        <% if @cart_items.present? %>
          <% @cart_items.each do |item| %>
            <tr>
              <td><%= item.product.name %></td>
              <td><%= item.quantity %></td>
              <td><%= number_to_currency(item.product.sale_price || item.product.price) %></td>
              <td><%= number_to_currency((item.product.sale_price || item.product.price) * item.quantity) %></td>
            </tr>
          <% end %>
        <% else %>
          <tr>
            <td colspan="4">No items in cart</td>
          </tr>
        <% end %>
      </tbody>
    </table>

    <div class="form-group">
      <strong>Total: <%= number_to_currency(@cart_total) %></strong>
    </div>

    <div class="form-group">
      <%= f.submit 'Complete Order', class: 'btn btn-primary' %>
    </div>
  <% end %>

  <!-- Payment Form -->
  <div id="payment-container" style="display: none;">
    <h3>Payment</h3>
    <form action="/charges" method="post" id="payment-form">
      <div id="card-element">
        <!-- A Stripe Element will be inserted here. -->
      </div>
      <div id="card-errors" role="alert"></div>
      <input type="hidden" name="orderId" id="order-id">
      <button type="submit" class="btn btn-primary">Pay Now</button>
    </form>
  </div>
</main>

<script src="https://js.stripe.com/v3/"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
  var stripe = Stripe('<%= Rails.application.credentials.dig(:stripe, :publishable_key) %>');
  var elements = stripe.elements();
  var card = elements.create('card');
  card.mount('#card-element');

  var orderForm = document.getElementById('order-form');
  var paymentContainer = document.getElementById('payment-container');

  orderForm.addEventListener('submit', function(event) {
    event.preventDefault();

    var formData = new FormData(orderForm);

    fetch(orderForm.action, {
      method: 'POST',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        'Accept': 'application/json'
      },
      body: formData
    }).then(function(response) {
      return response.json();
    }).then(function(data) {
      console.log('Response Data:', data); // For debugging
      if (data.success) {
        // Hide the order form and show the payment form
        orderForm.style.display = 'none';
        paymentContainer.style.display = 'block';
        // Set the order ID in the hidden input field
        document.getElementById('order-id').value = data.orderId;
      } else {
        alert('Order could not be processed: ' + data.error);
      }
    }).catch(function(error) {
      console.error('Error:', error);
    });
  });

  var paymentForm = document.getElementById('payment-form');
  paymentForm.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        stripeTokenHandler(result.token);
      }
    });
  });

  function stripeTokenHandler(token) {
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    // Add order ID to the payment form
    var orderIdInput = document.createElement('input');
    orderIdInput.setAttribute('type', 'hidden');
    orderIdInput.setAttribute('name', 'orderId');
    orderIdInput.setAttribute('value', document.getElementById('order-id').value);
    form.appendChild(orderIdInput);

    form.submit();
  }
});
</script>